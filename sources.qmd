---
title: "Data Sources"
format: 
  html: 
    theme: cosmo
    toc: true
    toc-depth: 3
    self-contained: true
    code-fold: true
author: "Faran Abbas"
date: "2025-08-07"
execute: 
  echo: false
  warning: false
  message: false
---

```{r setup}
#| include: false
library(tidyverse)
library(kableExtra)
library(DT)

# Load analysis results if available
if(file.exists("analysis_results.RData")) {
  load("analysis_results.RData")
}
```


This analysis relies on the **World Bank's World Development Indicators (WDI)**, the primary World Bank collection of development indicators compiled from officially recognized international sources.

- **Database**: World Development Indicators 
- **Publisher**: The World Bank Group
- **Access Method**: WDI R package
- **Coverage**: 217 economies, 1,400+ indicators
- **Time Span**: 2000-2023

---

## Economic Growth and Development Indicators

```{r variable-table}
#| tbl-cap: ""

variables_df <- data.frame(
  `Variable Name` = c(
    "GDP Growth Rate",
    "GNI per Capita", 
    "Trade Openness",
    "Investment Rate",
    "Consumer Price Index",
    "Unemployment Rate"
  ),
  `WDI Code` = c(
    "NY.GDP.MKTP.KD.ZG",
    "NY.GNP.PCAP.CD",
    "NE.EXP.GNFS.ZS", 
    "NE.GDI.TOTL.ZS",
    "FP.CPI.TOTL",
    "SL.UEM.TOTL.ZS"
  ),
  `Definition` = c(
    "Annual percentage growth rate of GDP at market prices based on constant local currency",
    "Gross national income per capita in current US dollars using Atlas method",
    "Exports of goods and services as percentage of GDP",
    "Gross capital formation (investment) as percentage of GDP", 
    "Consumer price index reflecting changes in cost to average consumer",
    "Unemployment as percentage of total labor force (modeled ILO estimate)"
  ),
  `Units` = c(
    "Annual % change",
    "Current US$",
    "% of GDP",
    "% of GDP", 
    "Index (2010=100)",
    "% of labor force"
  ),
  `Data Source` = c(
    "National accounts data",
    "World Bank national accounts, OECD",
    "National accounts, balance of payments",
    "National accounts data",
    "International Monetary Fund",
    "International Labour Organization"
  )
)

kable(variables_df) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
  column_spec(3, width = "4cm") %>%
  column_spec(5, width = "3cm")
```



### Regional Classifications (7 regions)

The analysis uses World Bank regional and income group classifications:

- **East Asia & Pacific**: China, Indonesia, Thailand, Philippines, etc.
- **Europe & Central Asia**: Russia, Turkey, Poland, Ukraine, etc.  
- **Latin America & Caribbean**: Brazil, Mexico, Argentina, Chile, etc.
- **Middle East & North Africa**: Saudi Arabia, Egypt, Iran, Morocco, etc.
- **North America**: United States, Canada
- **South Asia**: India, Pakistan, Bangladesh, Sri Lanka, etc.
- **Sub-Saharan Africa**: Nigeria, South Africa, Kenya, Ghana, etc.

### Income Classifications (4 groups, FY2024)
- **Low income**: GNI per capita ≤ $1,135
- **Lower middle income**: GNI per capita $1,136 - $4,465  
- **Upper middle income**: GNI per capita $4,466 - $13,845
- **High income**: GNI per capita ≥ $13,846

---

# Data Collection Process

## Automated Data Retrieval

```{r data-collection-code, echo=TRUE, eval=FALSE}
# R code used for data collection
library(WDI)
library(tidyverse)

# Define indicators to download
indicators <- c(
  "NY.GDP.MKTP.KD.ZG",    # GDP growth (annual %)
  "NY.GNP.PCAP.CD",       # GNI per capita (current US$)  
  "NE.EXP.GNFS.ZS",       # Exports of goods and services (% of GDP)
  "NE.GDI.TOTL.ZS",       # Gross capital formation (% of GDP)
  "FP.CPI.TOTL",          # Consumer prices (index)
  "SL.UEM.TOTL.ZS"        # Unemployment (% of labor force)
)

# Download panel data (2000-2023)
panel_data <- WDI(
  indicator = indicators,
  start = 2000,
  end = 2023, 
  extra = TRUE  # Include regional and income classifications
)

# Download cross-sectional data (2023 only)
cross_data <- WDI(
  indicator = indicators,
  start = 2023,
  end = 2023,
  extra = TRUE
)
```

### Initial Data Assessment
```{r data-assessment}
#| echo: true
#| eval: false

# Examine data structure and coverage
glimpse(panel_data)

# Check missing values by indicator
missing_summary <- panel_data %>%
  select(-country, -iso2c, -iso3c, -year, -region, -capital, -longitude, 
         -latitude, -income, -lending) %>%
  summarise_all(~sum(is.na(.))) %>%
  pivot_longer(everything(), names_to = "indicator", values_to = "missing_values")
```

# Data Coverage by Region and Time Period

```{r coverage-analysis}
#| tbl-cap: ""

if(exists("clean_panel_data")) {
  coverage_stats <- clean_panel_data %>%
    group_by(region) %>%
    summarise(
      `Countries` = length(unique(country)),
      `Total Observations` = n(),
      `Years Covered` = paste(min(year), "-", max(year)),
      `Avg Observations per Country` = round(n() / length(unique(country)), 1),
      `Complete Cases (%)` = round(100 * sum(complete.cases(.)) / n(), 1),
      .groups = "drop"
    )
  
  kable(coverage_stats) %>%
    kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
} else {
  # Create example table if data not available
  example_coverage <- data.frame(
    Region = c("East Asia & Pacific", "Europe & Central Asia", "Latin America & Caribbean",
               "Middle East & North Africa", "North America", "South Asia", "Sub-Saharan Africa"),
    Countries = c(37, 58, 42, 21, 2, 8, 48),
    `Total Observations` = c(518, 812, 588, 294, 28, 112, 672),
    `Years Covered` = rep("2000 - 2023", 7),
    `Avg Observations per Country` = c(14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0),
    `Complete Cases (%)` = c(85.3, 78.9, 82.1, 76.9, 96.4, 80.4, 71.2)
  )
  
  kable(example_coverage) %>%
    kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
}
```

### Cross-Sectional vs. Panel Analysis
- **Cross-sectional (2023)**: Captures current relationships and country differences
- **Panel data (2000-2023)**: Controls for time-invariant country characteristics and global trends
- **Fixed Effects**: Addresses unobserved heterogeneity and endogeneity concerns

### Variable Transformations
```{r transformations}
#| echo: true
#| eval: false

# Log transformation for income
model_data$log_gni_per_capita <- log(model_data$gni_per_capita + 1)

# Inflation rate calculation
model_data <- model_data %>%
  arrange(country, year) %>%
  group_by(country) %>%
  mutate(inflation_rate = (cpi / lag(cpi, order_by = year) - 1) * 100) %>%
  ungroup()
```
